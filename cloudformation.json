{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Cloud formation stack",
	"Resources": {
		"DynamoDB": {
			"Type": "AWS::DynamoDB::Table",
			"Properties": {
				"AttributeDefinitions": [{
					"AttributeName": "project",
					"AttributeType": "S"
				}, {
					"AttributeName": "metricName",
					"AttributeType": "S"
				}],
				"TableName": "gaeMetrics",
				"KeySchema": [{
					"AttributeName": "project",
					"KeyType": "HASH"
				}, {
					"AttributeName": "metricName",
					"KeyType": "RANGE"
				}],
				"ProvisionedThroughput": {
					"ReadCapacityUnits": 5,
					"WriteCapacityUnits": 5
				}
			}
		},
		"Kinesis": {
			"Type": "AWS::Kinesis::Stream",
			"Properties": {
				"Name": "gaeMetrics",
				"ShardCount": "1"
			}
		},
		"projectLamdba": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
				"Code": {
					"S3Bucket": "w-lambda-deployer-dev-us-east-1",
					"S3Key": "getGaeMetricsList.zip"
				},
				"Description": "Grabs project metrics and pushes them to a kinesis stream",
				"Handler": "get_metrics.lambda_handler",
				"FunctionName": "getGaeMetricsList",
				"MemorySize": "128",
				"Role": {
					"Fn::GetAtt": ["projectLambdaIamRole", "Arn"]
				},
				"Runtime": "python2.7",
				"Timeout": "60"
			}
		},
		"getGceProjectMertics": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
				"Code": {
					"S3Bucket": "w-lambda-deployer-dev-us-east-1",
					"S3Key": "pushGaeMetricToCloudwatch.zip"
				},
				"Description": "Grabs metrics from kinesis stream and pushes them to couldwatch",
				"Handler": "get_gce_project_metrics.lambda_handler",
				"FunctionName": "pushGaeMetricToCloudwatch",
				"MemorySize": "128",
				"Role": {
					"Fn::GetAtt": ["getGceProjectMerticsIamRole", "Arn"]
				},
				"Runtime": "python2.7",
				"Timeout": "300"
			}
		},
		"eventSource": {
			"Type": "AWS::Lambda::EventSourceMapping",
			"Properties": {
				"EventSourceArn": {
					"Fn::GetAtt": ["Kinesis", "Arn"]
				},
				"FunctionName": {
					"Fn::GetAtt": ["getGceProjectMertics", "Arn"]
				},
				"StartingPosition": "TRIM_HORIZON"
			}
		},
		"projectLambdaIamRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": ["lambda.amazonaws.com"]
						},
						"Action": ["sts:AssumeRole"]
					}]
				},
				"ManagedPolicyArns": ["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"],
				"Policies": [{
					"PolicyName": "lambda-deployer-s3-bucket-access",
					"PolicyDocument": {
						"Version": "2012-10-17",
						"Statement": [{
							"Action": [
								"kinesis:PutRecord"
							],
							"Effect": "Allow",
							"Resource": {
								"Fn::GetAtt": ["Kinesis", "Arn"]
							}
						}]
					}
				}]
			}
		},
		"getGceProjectMerticsIamRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": ["lambda.amazonaws.com"]
						},
						"Action": ["sts:AssumeRole"]
					}]
				},
				"ManagedPolicyArns": ["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"],
				"Policies": [{
					"PolicyName": "lambda-deployer-s3-bucket-access",
					"PolicyDocument": {
						"Version": "2012-10-17",
						"Statement": [{
							"Action": [
								"cloudwatch:PutMetricData"
							],
							"Effect": "Allow",
							"Resource": "*"
						}, {
							"Action": [
								"dynamodb:GetItem",
								"dynamodb:PutItem"
							],
							"Effect": "Allow",
							"Resource": {
								"Fn::Join": ["", ["arn:aws:dynamodb:", {
									"Ref": "AWS::Region"
								}, ":", {
									"Ref": "AWS::AccountId"
								}, ":table/", {
									"Ref": "DynamoDB"
								}]]
							}
						}, {
							"Action": [
								"kinesis:DescribeStream",
								"kinesis:GetShardIterator",
								"kinesis:GetRecords",
								"kinesis:ListStreams"
							],
							"Effect": "Allow",
							"Resource": {
								"Fn::GetAtt": ["Kinesis", "Arn"]
							}
						}]
					}
				}]
			}
		}
	}
}

